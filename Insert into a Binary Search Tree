/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution 
{
    public TreeNode insertIntoBST(TreeNode root, int val) 
    {
        TreeNode newNode = new TreeNode(val);
        
        if(root == null)
        {
            root = newNode;
            return root;
        }
        
        insertIntoBST(root,newNode);
        
        return root;
    }
    
    private void insertIntoBST(TreeNode root, TreeNode newNode)
    {
        if(newNode.val > root.val)
        {
            if(root.right == null)
            {
                root.right = newNode;
                return;
            }
            insertIntoBST(root.right, newNode);
        }
        else
        {
            if(root.left == null)
            {
                root.left = newNode;
                return;
            }
            insertIntoBST(root.left, newNode);
        }   
    }   
}
